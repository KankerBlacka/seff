name: Build APK

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    name: Build APK with Native Menu
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Install NDK
        run: |
          echo "y" | sdkmanager --install "ndk;25.1.8937393"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/25.1.8937393" >> $GITHUB_ENV
          
      - name: Install CMake
        run: |
          echo "y" | sdkmanager --install "cmake;3.22.1"
          
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2
        
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Build Debug APK
        run: ./gradlew assembleDebug --stacktrace --no-daemon
        
      - name: Build Release APK
        run: ./gradlew assembleRelease --stacktrace --no-daemon
        
      - name: Get version info
        id: version
        run: |
          VERSION_NAME=$(grep "versionName" app/build.gradle | awk '{print $2}' | tr -d '"')
          VERSION_CODE=$(grep "versionCode" app/build.gradle | awk '{print $2}')
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
          echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
          echo "build_date=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
          
      - name: Rename APKs
        run: |
          mv app/build/outputs/apk/debug/app-debug.apk \
             app/build/outputs/apk/debug/LSPosed-ModMenu-v${{ steps.version.outputs.version_name }}-debug.apk
          mv app/build/outputs/apk/release/app-release.apk \
             app/build/outputs/apk/release/LSPosed-ModMenu-v${{ steps.version.outputs.version_name }}-release.apk
             
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: LSPosed-ModMenu-Debug
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 30
          
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: LSPosed-ModMenu-Release
          path: app/build/outputs/apk/release/*.apk
          retention-days: 90
          
      - name: Create Release on Tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            app/build/outputs/apk/debug/*.apk
            app/build/outputs/apk/release/*.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

